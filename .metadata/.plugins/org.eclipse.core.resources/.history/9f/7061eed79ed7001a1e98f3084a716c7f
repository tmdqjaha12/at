package com.sbs.jhs.at.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.sbs.jhs.at.dao.ArticleDao;
import com.sbs.jhs.at.dto.Article;
import com.sbs.jhs.at.dto.ArticleReply;
import com.sbs.jhs.at.util.Util;

@Service
public class ArticleServiceImpl implements ArticleService{
	@Autowired
	private ArticleDao articleDao;
	
	public int getForPrintListArticlesCount(String searchKeyword) {
		return articleDao.getForPrintListArticlesCount(searchKeyword);
	}
	
	public List<Article> getForPrintArticles(int nowPage, int itemsInAPage, String searchKeyword) {
		int limitFrom = (nowPage - 1) * itemsInAPage;
//		System.out.println(limitFrom);
//		System.out.println(itemsInAPage);
		return articleDao.getForPrintArticles(limitFrom, itemsInAPage, searchKeyword);
	}

	public Article getForPrintOneArticle(int id) {
		Article article = articleDao.getForPrintOneArticle(id);
		
		return article;
	}

	public Map<String, Object> updateForDeleteOneArticle(int id) {
		articleDao.updateForDeleteOneArticle(id);
		Map<String, Object> rs = new HashMap<>();

		rs.put("resultCode", "S-1");
		rs.put("msg", String.format("%d번 게시물이 삭제되었습니다.", id));

		return rs;
	}
	
	public Map<String, Object> insertForWriteOneArticle(Map<String, Object> param) {
		articleDao.insertForWriteOneArticle(param);
		Map<String, Object> rs = new HashMap<>();
		
		rs.put("resultCode", "S-1");
		rs.put("msg", String.format("게시물이 생성 되었습니다."));
		
		return rs;
	}

	public Map<String, Object> updateForModifyOneArticle(Map<String, Object> param) {
		articleDao.updateForModifyOneArticle(param);
		Map<String, Object> rs = new HashMap<>();

		rs.put("resultCode", "S-1");
		rs.put("msg", String.format(param.get("id") + "번 게시물이 수정 되었습니다."));
		return rs;
	}
	
	// 댓글 작성
	public Map<String, Object> writeReply(Map<String, Object> param) {
		articleDao.writeArticleReply(param);
		int id = Util.getAsInt(param.get("id"));
		Map<String, Object> rs = new HashMap<>();

		rs.put("resultCode", "S-1");
		rs.put("msg", String.format("%d번 게시물 댓글이 생성되었습니다.", id));

		return rs;
	}

	// 댓글 리스팅
	public List<ArticleReply> getForPrintArticleReplies(int articleId, int from) {
		return articleDao.getForPrintArticleRepliesFrom(articleId, from);
	}
	// 댓글 삭제 권한 확인
//	public Map<String, Object> getArticleReplyDeleteAvailable(int id, int actorMemberId) {
//		ArticleReply articleReply = getArticleReply(id);
//
//		Map<String, Object> rs = new HashMap<>();
//
//		if (articleReply.getMemberId() == actorMemberId) {
//			rs.put("resultCode", "S-1");
//			rs.put("msg", "삭제권한이 있습니다.");
//		} else {
//			rs.put("resultCode", "F-1");
//			rs.put("msg", "삭제권한이 없습니다.");
//		}
//
//		return rs;
//	}
//
//	public ArticleReply getArticleReply(int id) {
//		return articleDao.getArticleReply(id);
//	}

	// 댓글 삭제
	public Map<String, Object> updateForDeleteOneArticleReply(String id) {
		articleDao.updateForDeleteOneArticleReply(id);
		Map<String, Object> rs = new HashMap<>();

		rs.put("resultCode", "S-1");
		rs.put("msg", String.format("%s번 게시물이 삭제되었습니다.", id));

		return rs;
	}

	// 댓글 수정을 위한 댓글 정보 가져오기
	public ArticleReply getForPrintArticleReply(int id) {
		ArticleReply articleReply = articleDao.getForPrintArticleReply(id);

		return articleReply;
	}

	// 댓글 수정
	public Map<String, Object> modifyReply(Map<String, Object> param) {
		articleDao.modifyArticleReply(param);
		int id = Util.getAsInt(param.get("id"));
		Map<String, Object> rs = new HashMap<>();

		rs.put("resultCode", "S-1");
		rs.put("msg", String.format("%d번 게시물 댓글이 수정되었습니다.", id));

		return rs;
	}
	
	public Map<String, Object> getArticleModifyReplyAvailable(int id, int actorMemberId) {
		Map<String, Object> rs = getArticleReplyDeleteAvailable(id, actorMemberId);
		String msg = (String)rs.get("msg");
		msg = msg.replace("삭제", "수정");
		rs.put("msg", msg);
		
		return rs;
	}
}